(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>p});var r=t(537),a=t.n(r),o=t(645),i=t.n(o),d=t(667),c=t.n(d),s=new URL(t(458),t.b),A=i()(a()),l=c()(s);A.push([e.id,"body {\n  height: 100%;\n  width: 100%;\n  background: url("+l+") repeat center center; \n  background-size: cover;\n  border: none;\n  color: white;\n  background-attachment: scroll;\n}\n\nh1, h2, p {\n  padding: 0px;\n  margin: 0px;\n}\n\n#weather-page {\n  padding: 30px;\n  width: 95%;\n  height: 95vh;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-template-rows: 4fr 1fr;\n}\n\n.main {\n  grid-column: 1 / 2;\n  grid-row: 1 / 2;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n#weather-icon {\n  width: 100px;\n}\n\n#temp-conversion {\n  background-color: transparent;\n  background-repeat: no-repeat;\n  border: none;\n  cursor: pointer;\n  overflow: hidden;\n  outline: none;\n}\n\n#search {\n  background-color: transparent;\n  border: 0px;\n  outline: none;\n  border-bottom: 3px solid gray;\n  box-shadow: none;\n  cursor: default;\n  color: white;\n  cursor: text;\n}\n\n#search:focus {\n  background-color: rgba(252, 252, 252, 0.1);\n}\n\n#search::placeholder {\n  color: white;\n}\n\n.material-icons {\n  position: relative;\n  top: 10px;\n}\n\n#submit {\n  background: transparent;\n  border: 0;\n}\n\n.material-icons {\n  cursor: pointer;\n}\n\n.sub {\n  grid-column: 3 / -1;\n  grid-row: 1 / 2;\n  display: flex;\n  gap: 16px;\n  flex-direction: column;\n  align-items: flex-end;\n}\n\n.weather-card {\n  display: flex;\n  justify-content: space-between;\n  gap: 10px;\n  height: 50px;\n  width: 275px;\n}\n\n.weather-data {\n  display: flex;\n  flex-direction: column;\n  text-align: right;\n}\n\n#forecast {\n  grid-row: 2 / -1;\n  grid-column: 1 / -1;\n}\n\n#time-manipulation {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 16px;\n}\n\n#time-cards {\n  padding: 10px;\n  display: flex;\n  justify-content: space-between;\n  gap: 12px;\n  font-size: 80%;\n}\n\n#time-cards > h1 {\n  font-size: 80%;\n}\n\n#hourly-time, #days-time {\n  background-color: transparent;\n  background-repeat: no-repeat;\n  border: none;\n  cursor: pointer;\n  overflow: hidden;\n  outline: none;\n}\n\n.day-card, .hour-card {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  height: 100px;\n}\n\n#prev-button, #next-button {\n  cursor: pointer;\n}\n\n#buttons {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.dots {\n  height: 25px;\n  width: 25px;\n  background-color: #e4e4e4;\n  border-radius: 50%;\n  display: inline-block;\n  cursor: pointer;\n}\n\n.dot-active {\n  background-color: white;\n}\n\n.inactive {\n  visibility: hidden;\n  display: none;\n}\n\n@media only screen and (min-device-width : 320px) and (max-device-width : 900px) {\n  body {\n    background-size: auto;\n    height: 100vh;\n  }\n\n  #weather-icon {\n    width: 50px;\n    height: auto;\n  }\n\n  #search {\n    font-size: 80%;\n  }\n\n  #buttons {\n    width: 80%;\n    height: 80%;\n  }\n\n  .main-info {\n    font-size: 80%;\n  }\n\n  #weather-page {\n    padding: 5px;\n    grid-template-columns: 1fr 1fr 1fr;\n    grid-template-rows: 1fr 1fr;\n  }\n\n  .weather-card {\n    width: 150px;\n    position: relative;\n    right: 10px;\n  }\n\n  .main {\n    gap: 6px;\n    max-height: 300px;\n  }\n\n  .sub {\n    gap: 4px;\n    max-height: 300px;\n  }\n\n  .weather-card > div > h2 {\n    font-size: 80%;\n  }\n\n  .weather-card > img {\n    width: 24px;\n    height: 24px;\n  }\n  \n  #time-cards {\n    padding: 10px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    height: 200px;\n  }\n\n  #time-cards {\n    font-size: 80%;\n  }\n\n  #time-cards > div > img {\n    height: 32px;\n    width: auto;\n  }\n\n  .day-card, .hour-card {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    flex-direction: row;\n    width: 300px;\n  }\n\n  .day-card > p {\n    width: 70px;\n  }\n\n  .hour-card > p {\n    width: 70px;\n  }\n\n  .day-card > h1 {\n    width: 85px;\n  }\n\n  .hour-card > h1 {\n    width: 85px;\n  }\n  \n  #search {\n    width: 95%;\n  }\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,YAAY;EACZ,WAAW;EACX,wEAAoE;EACpE,sBAAsB;EACtB,YAAY;EACZ,YAAY;EACZ,6BAA6B;AAC/B;;AAEA;EACE,YAAY;EACZ,WAAW;AACb;;AAEA;EACE,aAAa;EACb,UAAU;EACV,YAAY;EACZ,aAAa;EACb,kCAAkC;EAClC,2BAA2B;AAC7B;;AAEA;EACE,kBAAkB;EAClB,eAAe;EACf,aAAa;EACb,sBAAsB;EACtB,SAAS;AACX;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,6BAA6B;EAC7B,4BAA4B;EAC5B,YAAY;EACZ,eAAe;EACf,gBAAgB;EAChB,aAAa;AACf;;AAEA;EACE,6BAA6B;EAC7B,WAAW;EACX,aAAa;EACb,6BAA6B;EAC7B,gBAAgB;EAChB,eAAe;EACf,YAAY;EACZ,YAAY;AACd;;AAEA;EACE,0CAA0C;AAC5C;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,SAAS;AACX;;AAEA;EACE,uBAAuB;EACvB,SAAS;AACX;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,mBAAmB;EACnB,eAAe;EACf,aAAa;EACb,SAAS;EACT,sBAAsB;EACtB,qBAAqB;AACvB;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,SAAS;EACT,YAAY;EACZ,YAAY;AACd;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,iBAAiB;AACnB;;AAEA;EACE,gBAAgB;EAChB,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,2BAA2B;EAC3B,mBAAmB;EACnB,SAAS;AACX;;AAEA;EACE,aAAa;EACb,aAAa;EACb,8BAA8B;EAC9B,SAAS;EACT,cAAc;AAChB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,6BAA6B;EAC7B,4BAA4B;EAC5B,YAAY;EACZ,eAAe;EACf,gBAAgB;EAChB,aAAa;AACf;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,6BAA6B;EAC7B,mBAAmB;EACnB,aAAa;AACf;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,yBAAyB;EACzB,kBAAkB;EAClB,qBAAqB;EACrB,eAAe;AACjB;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,kBAAkB;EAClB,aAAa;AACf;;AAEA;EACE;IACE,qBAAqB;IACrB,aAAa;EACf;;EAEA;IACE,WAAW;IACX,YAAY;EACd;;EAEA;IACE,cAAc;EAChB;;EAEA;IACE,UAAU;IACV,WAAW;EACb;;EAEA;IACE,cAAc;EAChB;;EAEA;IACE,YAAY;IACZ,kCAAkC;IAClC,2BAA2B;EAC7B;;EAEA;IACE,YAAY;IACZ,kBAAkB;IAClB,WAAW;EACb;;EAEA;IACE,QAAQ;IACR,iBAAiB;EACnB;;EAEA;IACE,QAAQ;IACR,iBAAiB;EACnB;;EAEA;IACE,cAAc;EAChB;;EAEA;IACE,WAAW;IACX,YAAY;EACd;;EAEA;IACE,aAAa;IACb,aAAa;IACb,sBAAsB;IACtB,8BAA8B;IAC9B,mBAAmB;IACnB,aAAa;EACf;;EAEA;IACE,cAAc;EAChB;;EAEA;IACE,YAAY;IACZ,WAAW;EACb;;EAEA;IACE,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,mBAAmB;IACnB,YAAY;EACd;;EAEA;IACE,WAAW;EACb;;EAEA;IACE,WAAW;EACb;;EAEA;IACE,WAAW;EACb;;EAEA;IACE,WAAW;EACb;;EAEA;IACE,UAAU;EACZ;AACF",sourcesContent:["body {\n  height: 100%;\n  width: 100%;\n  background: url('./img/weather-background.jpg') repeat center center; \n  background-size: cover;\n  border: none;\n  color: white;\n  background-attachment: scroll;\n}\n\nh1, h2, p {\n  padding: 0px;\n  margin: 0px;\n}\n\n#weather-page {\n  padding: 30px;\n  width: 95%;\n  height: 95vh;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-template-rows: 4fr 1fr;\n}\n\n.main {\n  grid-column: 1 / 2;\n  grid-row: 1 / 2;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n#weather-icon {\n  width: 100px;\n}\n\n#temp-conversion {\n  background-color: transparent;\n  background-repeat: no-repeat;\n  border: none;\n  cursor: pointer;\n  overflow: hidden;\n  outline: none;\n}\n\n#search {\n  background-color: transparent;\n  border: 0px;\n  outline: none;\n  border-bottom: 3px solid gray;\n  box-shadow: none;\n  cursor: default;\n  color: white;\n  cursor: text;\n}\n\n#search:focus {\n  background-color: rgba(252, 252, 252, 0.1);\n}\n\n#search::placeholder {\n  color: white;\n}\n\n.material-icons {\n  position: relative;\n  top: 10px;\n}\n\n#submit {\n  background: transparent;\n  border: 0;\n}\n\n.material-icons {\n  cursor: pointer;\n}\n\n.sub {\n  grid-column: 3 / -1;\n  grid-row: 1 / 2;\n  display: flex;\n  gap: 16px;\n  flex-direction: column;\n  align-items: flex-end;\n}\n\n.weather-card {\n  display: flex;\n  justify-content: space-between;\n  gap: 10px;\n  height: 50px;\n  width: 275px;\n}\n\n.weather-data {\n  display: flex;\n  flex-direction: column;\n  text-align: right;\n}\n\n#forecast {\n  grid-row: 2 / -1;\n  grid-column: 1 / -1;\n}\n\n#time-manipulation {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 16px;\n}\n\n#time-cards {\n  padding: 10px;\n  display: flex;\n  justify-content: space-between;\n  gap: 12px;\n  font-size: 80%;\n}\n\n#time-cards > h1 {\n  font-size: 80%;\n}\n\n#hourly-time, #days-time {\n  background-color: transparent;\n  background-repeat: no-repeat;\n  border: none;\n  cursor: pointer;\n  overflow: hidden;\n  outline: none;\n}\n\n.day-card, .hour-card {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  height: 100px;\n}\n\n#prev-button, #next-button {\n  cursor: pointer;\n}\n\n#buttons {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.dots {\n  height: 25px;\n  width: 25px;\n  background-color: #e4e4e4;\n  border-radius: 50%;\n  display: inline-block;\n  cursor: pointer;\n}\n\n.dot-active {\n  background-color: white;\n}\n\n.inactive {\n  visibility: hidden;\n  display: none;\n}\n\n@media only screen and (min-device-width : 320px) and (max-device-width : 900px) {\n  body {\n    background-size: auto;\n    height: 100vh;\n  }\n\n  #weather-icon {\n    width: 50px;\n    height: auto;\n  }\n\n  #search {\n    font-size: 80%;\n  }\n\n  #buttons {\n    width: 80%;\n    height: 80%;\n  }\n\n  .main-info {\n    font-size: 80%;\n  }\n\n  #weather-page {\n    padding: 5px;\n    grid-template-columns: 1fr 1fr 1fr;\n    grid-template-rows: 1fr 1fr;\n  }\n\n  .weather-card {\n    width: 150px;\n    position: relative;\n    right: 10px;\n  }\n\n  .main {\n    gap: 6px;\n    max-height: 300px;\n  }\n\n  .sub {\n    gap: 4px;\n    max-height: 300px;\n  }\n\n  .weather-card > div > h2 {\n    font-size: 80%;\n  }\n\n  .weather-card > img {\n    width: 24px;\n    height: 24px;\n  }\n  \n  #time-cards {\n    padding: 10px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    height: 200px;\n  }\n\n  #time-cards {\n    font-size: 80%;\n  }\n\n  #time-cards > div > img {\n    height: 32px;\n    width: auto;\n  }\n\n  .day-card, .hour-card {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    flex-direction: row;\n    width: 300px;\n  }\n\n  .day-card > p {\n    width: 70px;\n  }\n\n  .hour-card > p {\n    width: 70px;\n  }\n\n  .day-card > h1 {\n    width: 85px;\n  }\n\n  .hour-card > h1 {\n    width: 85px;\n  }\n  \n  #search {\n    width: 95%;\n  }\n}"],sourceRoot:""}]);const p=A},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,a,o){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var d=0;d<this.length;d++){var c=this[d][0];null!=c&&(i[c]=!0)}for(var s=0;s<e.length;s++){var A=[].concat(e[s]);r&&i[A[0]]||(void 0!==o&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=o),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),a&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=a):A[4]="".concat(a)),n.push(A))}},n}},667:e=>{e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */");return[n].concat([o]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var o={},i=[],d=0;d<e.length;d++){var c=e[d],s=r.base?c[0]+r.base:c[0],A=o[s]||0,l="".concat(s," ").concat(A);o[s]=A+1;var p=t(l),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)n[p].references++,n[p].updater(u);else{var m=a(u,r);r.byIndex=d,n.splice(d,0,{identifier:l,updater:m,references:1})}i.push(l)}return i}function a(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,a){var o=r(e=e||[],a=a||{});return function(e){e=e||[];for(var i=0;i<o.length;i++){var d=t(o[i]);n[d].references--}for(var c=r(e,a),s=0;s<o.length;s++){var A=t(o[s]);0===n[A].references&&(n[A].updater(),n.splice(A,1))}o=c}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},458:(e,n,t)=>{e.exports=t.p+"1e2bad270fd2b572a044.jpg"}},n={};function t(r){var a=n[r];if(void 0!==a)return a.exports;var o=n[r]={id:r,exports:{}};return e[r](o,o.exports,t),o.exports}t.m=e,t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var e=t(379),n=t.n(e),r=t(795),a=t.n(r),o=t(569),i=t.n(o),d=t(565),c=t.n(d),s=t(216),A=t.n(s),l=t(589),p=t.n(l),u=t(426),m={};m.styleTagTransform=p(),m.setAttributes=c(),m.insert=i().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=A(),n()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;const h=t.p+"5f9a998b93b838e24e7b.png",f=t.p+"fe63b9b8b1892856419e.png",E=t.p+"8d70793284db628fb63d.png",C=t.p+"a55c2563e4d86a0f3a8d.png",g=t.p+"9820174e90bd6300237d.png",y=t.p+"eee45ea24ed622892f8b.png",b=t.p+"b111f0680a792f12a2fa.png",B=t.p+"90344d61cf00ad6c6f71.png",x=t.p+"3ba02247e7366f77cc82.png";let w;const v=(()=>{class e{constructor(e){this.location=[e.location.name,e.location.region,e.location.country],this.weather=e.current.condition.text,this.icon=e.current.condition.icon,this.tempF=e.current.temp_f,this.tempC=e.current.temp_c,this.time=e.location.localtime,this.feelsLikeF=e.current.feelslike_f,this.feelsLikeC=e.current.feelslike_c,this.rainChance=e.forecast.forecastday[0].day.daily_chance_of_rain,this.sunRise=e.forecast.forecastday[0].astro.sunrise,this.sunSet=e.forecast.forecastday[0].astro.sunset,this.moonPhase=e.forecast.forecastday[0].astro.moon_phase,this.humid=e.current.humidity,this.wind=[e.current.wind_mph,e.current.wind_kph,e.current.wind_dir],this.dailyForecast=[];for(let n=1;n<e.forecast.forecastday.length;n++)this.dailyForecast.push({sunRise:e.forecast.forecastday[n].astro.sunrise,sunSet:e.forecast.forecastday[n].astro.sunset,moonPhase:e.forecast.forecastday[n].astro.moon_phase,tempC:e.forecast.forecastday[n].day.avgtemp_c,tempF:e.forecast.forecastday[n].day.avgtemp_f,date:e.forecast.forecastday[n].date,weatherType:e.forecast.forecastday[n].day.condition.icon});let n=parseInt(e.location.localtime.substr(11,2)),t=0;this.hourlyForecast=[];for(let r=0;r<24;r++)n>=24&&(n=0,t++),this.hourlyForecast.push({time:e.forecast.forecastday[t].hour[n].time,tempC:e.forecast.forecastday[t].hour[n].temp_c,tempF:e.forecast.forecastday[t].hour[n].temp_f,weatherType:e.forecast.forecastday[t].hour[n].condition.icon}),n++}}let n;return{retrieveWeather:async()=>{try{n=n?search.value:"New York";const t=await fetch(`https://api.weatherapi.com/v1/forecast.json?key=e3b792acc4dc4d7593b232955232802&q=${n}&days=8&aqi=no&alerts=no\n      `,{mode:"cors"}),r=await t.json();console.log(r),(n=>{w=new e(n),console.log(w)})(r)}catch(e){alert("Invalid location entered!")}}}})();function I(e,n){if(n.length<e)throw new TypeError(e+" argument"+(e>1?"s":"")+" required, but only "+n.length+" present")}function k(e){return k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},k(e)}function N(e){I(1,arguments);var n=Object.prototype.toString.call(e);return e instanceof Date||"object"===k(e)&&"[object Date]"===n?new Date(e.getTime()):"number"==typeof e||"[object Number]"===n?new Date(e):("string"!=typeof e&&"[object String]"!==n||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments"),console.warn((new Error).stack)),new Date(NaN))}function T(e){return I(1,arguments),N(e).getDay()}Math.pow(10,8);var S=6e4,F=36e5;function Y(e,n){var t;I(1,arguments);var r=function(e){if(null===e||!0===e||!1===e)return NaN;var n=Number(e);return isNaN(n)?n:n<0?Math.ceil(n):Math.floor(n)}(null!==(t=null==n?void 0:n.additionalDigits)&&void 0!==t?t:2);if(2!==r&&1!==r&&0!==r)throw new RangeError("additionalDigits must be 0, 1 or 2");if("string"!=typeof e&&"[object String]"!==Object.prototype.toString.call(e))return new Date(NaN);var a,o=function(e){var n,t={},r=e.split($.dateTimeDelimiter);if(r.length>2)return t;if(/:/.test(r[0])?n=r[0]:(t.date=r[0],n=r[1],$.timeZoneDelimiter.test(t.date)&&(t.date=e.split($.timeZoneDelimiter)[0],n=e.substr(t.date.length,e.length))),n){var a=$.timezone.exec(n);a?(t.time=n.replace(a[1],""),t.timezone=a[1]):t.time=n}return t}(e);if(o.date){var i=function(e,n){var t=new RegExp("^(?:(\\d{4}|[+-]\\d{"+(4+n)+"})|(\\d{2}|[+-]\\d{"+(2+n)+"})$)"),r=e.match(t);if(!r)return{year:NaN,restDateString:""};var a=r[1]?parseInt(r[1]):null,o=r[2]?parseInt(r[2]):null;return{year:null===o?a:100*o,restDateString:e.slice((r[1]||r[2]).length)}}(o.date,r);a=function(e,n){if(null===n)return new Date(NaN);var t=e.match(j);if(!t)return new Date(NaN);var r=!!t[4],a=U(t[1]),o=U(t[2])-1,i=U(t[3]),d=U(t[4]),c=U(t[5])-1;if(r)return function(e,n,t){return n>=1&&n<=53&&t>=0&&t<=6}(0,d,c)?function(e,n,t){var r=new Date(0);r.setUTCFullYear(e,0,4);var a=7*(n-1)+t+1-(r.getUTCDay()||7);return r.setUTCDate(r.getUTCDate()+a),r}(n,d,c):new Date(NaN);var s=new Date(0);return function(e,n,t){return n>=0&&n<=11&&t>=1&&t<=(z[n]||(L(e)?29:28))}(n,o,i)&&function(e,n){return n>=1&&n<=(L(e)?366:365)}(n,a)?(s.setUTCFullYear(n,o,Math.max(a,i)),s):new Date(NaN)}(i.restDateString,i.year)}if(!a||isNaN(a.getTime()))return new Date(NaN);var d,c=a.getTime(),s=0;if(o.time&&(s=function(e){var n=e.match(D);if(!n)return NaN;var t=Z(n[1]),r=Z(n[2]),a=Z(n[3]);return function(e,n,t){return 24===e?0===n&&0===t:t>=0&&t<60&&n>=0&&n<60&&e>=0&&e<25}(t,r,a)?t*F+r*S+1e3*a:NaN}(o.time),isNaN(s)))return new Date(NaN);if(!o.timezone){var A=new Date(c+s),l=new Date(0);return l.setFullYear(A.getUTCFullYear(),A.getUTCMonth(),A.getUTCDate()),l.setHours(A.getUTCHours(),A.getUTCMinutes(),A.getUTCSeconds(),A.getUTCMilliseconds()),l}return d=function(e){if("Z"===e)return 0;var n=e.match(W);if(!n)return 0;var t="+"===n[1]?-1:1,r=parseInt(n[2]),a=n[3]&&parseInt(n[3])||0;return function(e,n){return n>=0&&n<=59}(0,a)?t*(r*F+a*S):NaN}(o.timezone),isNaN(d)?new Date(NaN):new Date(c+s+d)}var $={dateTimeDelimiter:/[T ]/,timeZoneDelimiter:/[Z ]/i,timezone:/([Z+-].*)$/},j=/^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/,D=/^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/,W=/^([+-])(\d{2})(?::?(\d{2}))?$/;function U(e){return e?parseInt(e):1}function Z(e){return e&&parseFloat(e.replace(",","."))||0}var z=[31,null,31,30,31,30,31,31,30,31,30,31];function L(e){return e%400==0||e%4==0&&e%100!=0}let M="daily",_="F",R=0;window.onload=()=>{document.getElementById("town-search").addEventListener("submit",(()=>{q.pageUpdates("new")})),q.pageUpdates("new"),document.getElementById("temp-conversion").addEventListener("click",(()=>{q.convertTemp()})),document.getElementById("hourly-time").addEventListener("click",(()=>{q.displayTime()})),document.getElementById("days-time").addEventListener("click",(()=>{q.displayTime()})),document.getElementById("days-time").disabled=!0,document.getElementById("next-button").src=x,document.getElementById("next-button").addEventListener("click",(()=>{P.nextSlide()})),document.getElementById("prev-button").src=B,document.getElementById("prev-button").addEventListener("click",(()=>{P.prevSlide()}));let e=document.querySelectorAll(".dots");for(let n=0;n<e.length;n++)e[n].addEventListener("click",(()=>{P.slideJump(n)}));e[0].classList.add("dot-active")};const q=(()=>{const e=e=>{for(;e.firstChild;)e.removeChild(e.lastChild)},n=()=>{let n=document.getElementById("time-cards");if(e(n),"daily"===M)for(let e=0;e<w.dailyForecast.length;e++){let t=document.createElement("div"),a=document.createElement("p"),o=document.createElement("h1"),i=document.createElement("img");t.appendChild(a),t.appendChild(o),t.appendChild(i),t.setAttribute("class","day-card");let d=r(T(Y(w.dailyForecast[e].date)));a.appendChild(document.createTextNode(d)),"F"===_?o.appendChild(document.createTextNode(`${w.dailyForecast[e].tempF} °F`)):o.appendChild(document.createTextNode(`${w.dailyForecast[e].tempC} °C`)),i.src=w.dailyForecast[e].weatherType,n.appendChild(t)}else for(let e=0;e<8;e++)n.appendChild(t(e+8*R))},t=e=>{let n=document.createElement("div"),t=document.createElement("p"),r=document.createElement("h1"),o=document.createElement("img");n.appendChild(t),n.appendChild(r),n.appendChild(o),n.setAttribute("class","hour-card"),n.classList.add(`${e}`);let i=a(function(e){return I(1,arguments),N(e).getHours()}(Y(w.hourlyForecast[e].time)));return t.appendChild(document.createTextNode(i)),"F"===_?r.appendChild(document.createTextNode(`${w.hourlyForecast[e].tempF} °F`)):r.appendChild(document.createTextNode(`${w.hourlyForecast[e].tempC} °C`)),o.src=w.hourlyForecast[e].weatherType,n},r=e=>{switch(e){case 0:return"Sunday";case 1:return"Monday";case 2:return"Tuesday";case 3:return"Wednesday";case 4:return"Thursday";case 5:return"Friday";case 6:return"Saturday"}},a=e=>0===e?"12 AM":12===e?"12 PM":e>12?e-12+" PM":`${e} AM`;return{pageUpdates:async t=>{"new"===t&&await v.retrieveWeather(),(()=>{let n=document.getElementById("weather"),t=document.getElementById("location"),r=document.getElementById("time"),a=document.getElementById("temp"),o=document.getElementById("weather-icon"),i=document.getElementById("feels-like"),d=document.getElementById("rain-chance"),c=document.getElementById("humidity"),s=document.getElementById("wind-speed"),A=document.getElementById("sun-rise"),l=document.getElementById("sun-set"),p=document.getElementById("moon-phase");e(n),e(t),e(r),e(a),e(i),e(d),e(c),e(s),e(A),e(l),e(p);let u=document.querySelectorAll(".icon");u[0].src=h,u[1].src=f,u[2].src=E,u[3].src=C,u[4].src=g,u[5].src=y,u[6].src=b;for(let e=0;e<w.location.length;e++)t.appendChild(document.createTextNode(`${w.location[e]}`)),t.appendChild(document.createElement("br"));n.appendChild(document.createTextNode(`${w.weather}`)),d.appendChild(document.createTextNode(`${w.rainChance} %`)),A.appendChild(document.createTextNode(`${w.sunRise}`)),l.appendChild(document.createTextNode(`${w.sunSet}`)),p.appendChild(document.createTextNode(`${w.moonPhase}`)),r.appendChild(document.createTextNode(`Retrieved: ${w.time}`)),o.src=w.icon,c.appendChild(document.createTextNode(`${w.humid} %`)),s.appendChild(document.createTextNode(`${w.wind[2]} `)),"F"===_?(a.appendChild(document.createTextNode(`${w.tempF} °F`)),i.appendChild(document.createTextNode(`${w.feelsLikeF} °F`)),s.appendChild(document.createTextNode(`${w.wind[0]} mph`))):(a.appendChild(document.createTextNode(`${w.tempC} °C`)),i.appendChild(document.createTextNode(`${w.feelsLikeC} °C`)),s.appendChild(document.createTextNode(`${w.wind[1]} kph`)))})(),n()},convertTemp:()=>{let e=document.getElementById("temp-conversion"),t=document.getElementById("temp"),r=document.getElementById("feels-like"),a=document.getElementById("wind-speed");"F"===_?(e.textContent="Convert to F",_="C",t.textContent=`${w.tempC} °C`,r.textContent=`${w.feelsLikeC} °C`,a.textContent=`${w.wind[2]} ${w.wind[1]} kph`):(e.textContent="Convert to C",_="F",t.textContent=`${w.tempF} °F`,r.textContent=`${w.feelsLikeF} °F`,a.textContent=`${w.wind[2]} ${w.wind[0]} mph`),n()},displayTime:()=>{let e=document.getElementById("hourly-time"),t=document.getElementById("days-time"),r=document.getElementById("buttons");"daily"===M?(r.classList.remove("inactive"),M="hourly",e.disabled=!0,t.disabled=!1):(r.classList.add("inactive"),M="daily",e.disabled=!1,t.disabled=!0),n()},generateForecastCards:n}})(),P=(()=>{const e=e=>{let n=document.querySelectorAll(".dots");n.forEach((e=>e.setAttribute("class","dots"))),n[e].classList.add("dot-active")};return{nextSlide:()=>2===R?void 0:(R++,q.generateForecastCards(),void e(R)),prevSlide:()=>0===R?void 0:(R--,q.generateForecastCards(),void e(R)),slideJump:n=>{R=n,q.generateForecastCards(),e(n)}}})()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,