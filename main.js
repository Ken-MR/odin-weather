(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>l});var r=t(537),a=t.n(r),i=t(645),o=t.n(i),A=t(667),d=t.n(A),c=new URL(t(458),t.b),s=o()(a()),p=d()(c);s.push([n.id,"body {\n  height: 100%;\n  width: 100%;\n  background: url("+p+") repeat center center; \n  background-size: cover;\n  border: none;\n  color: white;\n  background-attachment: scroll;\n}\n\nbutton {\n  color: white;\n}\n\nh1, h2, p {\n  padding: 0px;\n  margin: 0px;\n}\n\n#weather-page {\n  padding: 30px;\n  width: 95%;\n  height: 95vh;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-template-rows: 4fr 1fr;\n}\n\n.main {\n  grid-column: 1 / 2;\n  grid-row: 1 / 2;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n#weather-icon {\n  width: 100px;\n}\n\n#temp-conversion {\n  background-color: transparent;\n  background-repeat: no-repeat;\n  border: none;\n  cursor: pointer;\n  overflow: hidden;\n  outline: none;\n}\n\n#search {\n  background-color: transparent;\n  border: 0px;\n  outline: none;\n  border-bottom: 3px solid gray;\n  box-shadow: none;\n  cursor: default;\n  color: white;\n  cursor: text;\n}\n\n#search:focus {\n  background-color: rgba(252, 252, 252, 0.1);\n}\n\n#search::placeholder {\n  color: white;\n}\n\n.material-icons {\n  position: relative;\n  top: 10px;\n}\n\n#submit {\n  background: transparent;\n  border: 0;\n}\n\n.material-icons {\n  cursor: pointer;\n}\n\n.sub {\n  grid-column: 3 / -1;\n  grid-row: 1 / 2;\n  display: flex;\n  gap: 16px;\n  flex-direction: column;\n  align-items: flex-end;\n}\n\n.weather-card {\n  display: flex;\n  justify-content: space-between;\n  gap: 10px;\n  height: 50px;\n  width: 275px;\n}\n\n.weather-data {\n  display: flex;\n  flex-direction: column;\n  text-align: right;\n}\n\n#forecast {\n  grid-row: 2 / -1;\n  grid-column: 1 / -1;\n}\n\n#time-manipulation {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 16px;\n}\n\n#time-cards {\n  padding: 10px;\n  display: flex;\n  justify-content: space-between;\n  gap: 12px;\n  font-size: 80%;\n}\n\n#time-cards > h1 {\n  font-size: 80%;\n}\n\n#hourly-time, #days-time {\n  background-color: transparent;\n  background-repeat: no-repeat;\n  border: none;\n  cursor: pointer;\n  overflow: hidden;\n  outline: none;\n}\n\n.day-card, .hour-card {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  height: 100px;\n}\n\n#prev-button, #next-button {\n  cursor: pointer;\n}\n\n#buttons {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.dots {\n  height: 25px;\n  width: 25px;\n  background-color: #e4e4e4;\n  border-radius: 50%;\n  display: inline-block;\n  cursor: pointer;\n}\n\n.dot-active {\n  background-color: white;\n}\n\n.inactive {\n  visibility: hidden;\n  display: none;\n}\n\n@media only screen and (min-device-width : 320px) and (max-device-width : 900px) {\n  body {\n    background-size: auto;\n    height: 100vh;\n  }\n\n  #weather-icon {\n    width: 50px;\n    height: auto;\n  }\n\n  #search {\n    font-size: 80%;\n  }\n\n  #buttons {\n    width: 80%;\n    height: 80%;\n  }\n\n  .main-info {\n    font-size: 80%;\n  }\n\n  #weather-page {\n    padding: 5px;\n    grid-template-columns: 1fr 1fr 1fr;\n    grid-template-rows: 1fr 1fr;\n  }\n\n  .weather-card {\n    width: 150px;\n    position: relative;\n    right: 10px;\n  }\n\n  .main {\n    gap: 6px;\n    max-height: 300px;\n  }\n\n  .sub {\n    gap: 4px;\n    max-height: 300px;\n  }\n\n  .weather-card > div > h2 {\n    font-size: 80%;\n  }\n\n  .weather-card > img {\n    width: 24px;\n    height: 24px;\n  }\n  \n  #time-cards {\n    padding: 10px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    height: 200px;\n  }\n\n  #time-cards {\n    font-size: 80%;\n  }\n\n  #time-cards > div > img {\n    height: 32px;\n    width: auto;\n  }\n\n  .day-card, .hour-card {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    flex-direction: row;\n    width: 300px;\n  }\n\n  .day-card > p {\n    width: 70px;\n  }\n\n  .hour-card > p {\n    width: 70px;\n  }\n\n  .day-card > h1 {\n    width: 85px;\n  }\n\n  .hour-card > h1 {\n    width: 85px;\n  }\n  \n  #search {\n    width: 95%;\n  }\n}\n\n@media only screen and (min-device-width : 200px) and (max-device-width : 400px) {\n  body {\n    background-size: auto;\n    height: 100vh;\n  }\n\n  #weather-icon {\n    width: 50px;\n    height: auto;\n  }\n\n  #town-search {\n    width: 70px;\n  }\n\n  .material-icons {\n    width: 16px;\n    height: auto;\n  }\n\n  #search {\n    font-size: 70%;\n  }\n\n  #buttons {\n    width: 70%;\n    height: 70%;\n  }\n\n  .main-info {\n    font-size: 70%;\n  }\n\n  #weather-page {\n    padding: 5px;\n    grid-template-columns: 1fr 0.7fr 1fr;\n    grid-template-rows: 0.8fr 1fr;\n  }\n\n  .weather-card {\n    width: 125px;\n    position: relative;\n    right: 10px;\n  }\n\n  .main {\n    gap: 8px;\n    max-height: 250px;\n  }\n\n  .sub {\n    gap:8px;\n    max-height: 250px;\n  }\n\n  .weather-card > div > h2 {\n    font-size: 70%;\n  }\n\n  .weather-card > img {\n    width: 16px;\n    height: 16px;\n  }\n  \n  #time-cards {\n    padding: 5px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    height: 125px;\n  }\n\n  button {\n    font-size: 8px;\n  }\n\n  #temp-conversion {\n    font-size: 8px;\n  }\n\n  #time-cards {\n    font-size: 70%;\n  }\n\n  #time-cards > div > img {\n    height: 24px;\n    width: auto;\n  }\n\n  .day-card, .hour-card {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    flex-direction: row;\n    width: 250px;\n  }\n\n  .day-card > p {\n    width: 60px;\n  }\n\n  .hour-card > p {\n    width: 60px;\n  }\n\n  .day-card > h1 {\n    width: 70px;\n  }\n\n  .hour-card > h1 {\n    width: 70px;\n  }\n  \n  #search {\n    width: 95%;\n  }\n\n  .dots {\n    height: 15px;\n    width: 15px;\n  }\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:["body {\n  height: 100%;\n  width: 100%;\n  background: url('./img/weather-background.jpg') repeat center center; \n  background-size: cover;\n  border: none;\n  color: white;\n  background-attachment: scroll;\n}\n\nbutton {\n  color: white;\n}\n\nh1, h2, p {\n  padding: 0px;\n  margin: 0px;\n}\n\n#weather-page {\n  padding: 30px;\n  width: 95%;\n  height: 95vh;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-template-rows: 4fr 1fr;\n}\n\n.main {\n  grid-column: 1 / 2;\n  grid-row: 1 / 2;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n#weather-icon {\n  width: 100px;\n}\n\n#temp-conversion {\n  background-color: transparent;\n  background-repeat: no-repeat;\n  border: none;\n  cursor: pointer;\n  overflow: hidden;\n  outline: none;\n}\n\n#search {\n  background-color: transparent;\n  border: 0px;\n  outline: none;\n  border-bottom: 3px solid gray;\n  box-shadow: none;\n  cursor: default;\n  color: white;\n  cursor: text;\n}\n\n#search:focus {\n  background-color: rgba(252, 252, 252, 0.1);\n}\n\n#search::placeholder {\n  color: white;\n}\n\n.material-icons {\n  position: relative;\n  top: 10px;\n}\n\n#submit {\n  background: transparent;\n  border: 0;\n}\n\n.material-icons {\n  cursor: pointer;\n}\n\n.sub {\n  grid-column: 3 / -1;\n  grid-row: 1 / 2;\n  display: flex;\n  gap: 16px;\n  flex-direction: column;\n  align-items: flex-end;\n}\n\n.weather-card {\n  display: flex;\n  justify-content: space-between;\n  gap: 10px;\n  height: 50px;\n  width: 275px;\n}\n\n.weather-data {\n  display: flex;\n  flex-direction: column;\n  text-align: right;\n}\n\n#forecast {\n  grid-row: 2 / -1;\n  grid-column: 1 / -1;\n}\n\n#time-manipulation {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 16px;\n}\n\n#time-cards {\n  padding: 10px;\n  display: flex;\n  justify-content: space-between;\n  gap: 12px;\n  font-size: 80%;\n}\n\n#time-cards > h1 {\n  font-size: 80%;\n}\n\n#hourly-time, #days-time {\n  background-color: transparent;\n  background-repeat: no-repeat;\n  border: none;\n  cursor: pointer;\n  overflow: hidden;\n  outline: none;\n}\n\n.day-card, .hour-card {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  height: 100px;\n}\n\n#prev-button, #next-button {\n  cursor: pointer;\n}\n\n#buttons {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.dots {\n  height: 25px;\n  width: 25px;\n  background-color: #e4e4e4;\n  border-radius: 50%;\n  display: inline-block;\n  cursor: pointer;\n}\n\n.dot-active {\n  background-color: white;\n}\n\n.inactive {\n  visibility: hidden;\n  display: none;\n}\n\n@media only screen and (min-device-width : 320px) and (max-device-width : 900px) {\n  body {\n    background-size: auto;\n    height: 100vh;\n  }\n\n  #weather-icon {\n    width: 50px;\n    height: auto;\n  }\n\n  #search {\n    font-size: 80%;\n  }\n\n  #buttons {\n    width: 80%;\n    height: 80%;\n  }\n\n  .main-info {\n    font-size: 80%;\n  }\n\n  #weather-page {\n    padding: 5px;\n    grid-template-columns: 1fr 1fr 1fr;\n    grid-template-rows: 1fr 1fr;\n  }\n\n  .weather-card {\n    width: 150px;\n    position: relative;\n    right: 10px;\n  }\n\n  .main {\n    gap: 6px;\n    max-height: 300px;\n  }\n\n  .sub {\n    gap: 4px;\n    max-height: 300px;\n  }\n\n  .weather-card > div > h2 {\n    font-size: 80%;\n  }\n\n  .weather-card > img {\n    width: 24px;\n    height: 24px;\n  }\n  \n  #time-cards {\n    padding: 10px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    height: 200px;\n  }\n\n  #time-cards {\n    font-size: 80%;\n  }\n\n  #time-cards > div > img {\n    height: 32px;\n    width: auto;\n  }\n\n  .day-card, .hour-card {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    flex-direction: row;\n    width: 300px;\n  }\n\n  .day-card > p {\n    width: 70px;\n  }\n\n  .hour-card > p {\n    width: 70px;\n  }\n\n  .day-card > h1 {\n    width: 85px;\n  }\n\n  .hour-card > h1 {\n    width: 85px;\n  }\n  \n  #search {\n    width: 95%;\n  }\n}\n\n@media only screen and (min-device-width : 200px) and (max-device-width : 400px) {\n  body {\n    background-size: auto;\n    height: 100vh;\n  }\n\n  #weather-icon {\n    width: 50px;\n    height: auto;\n  }\n\n  #town-search {\n    width: 70px;\n  }\n\n  .material-icons {\n    width: 16px;\n    height: auto;\n  }\n\n  #search {\n    font-size: 70%;\n  }\n\n  #buttons {\n    width: 70%;\n    height: 70%;\n  }\n\n  .main-info {\n    font-size: 70%;\n  }\n\n  #weather-page {\n    padding: 5px;\n    grid-template-columns: 1fr 0.7fr 1fr;\n    grid-template-rows: 0.8fr 1fr;\n  }\n\n  .weather-card {\n    width: 125px;\n    position: relative;\n    right: 10px;\n  }\n\n  .main {\n    gap: 8px;\n    max-height: 250px;\n  }\n\n  .sub {\n    gap:8px;\n    max-height: 250px;\n  }\n\n  .weather-card > div > h2 {\n    font-size: 70%;\n  }\n\n  .weather-card > img {\n    width: 16px;\n    height: 16px;\n  }\n  \n  #time-cards {\n    padding: 5px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    height: 125px;\n  }\n\n  button {\n    font-size: 8px;\n  }\n\n  #temp-conversion {\n    font-size: 8px;\n  }\n\n  #time-cards {\n    font-size: 70%;\n  }\n\n  #time-cards > div > img {\n    height: 24px;\n    width: auto;\n  }\n\n  .day-card, .hour-card {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    flex-direction: row;\n    width: 250px;\n  }\n\n  .day-card > p {\n    width: 60px;\n  }\n\n  .hour-card > p {\n    width: 60px;\n  }\n\n  .day-card > h1 {\n    width: 70px;\n  }\n\n  .hour-card > h1 {\n    width: 70px;\n  }\n  \n  #search {\n    width: 95%;\n  }\n\n  .dots {\n    height: 15px;\n    width: 15px;\n  }\n}"],sourceRoot:""}]);const l=s},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,a,i){"string"==typeof n&&(n=[[null,n,void 0]]);var o={};if(r)for(var A=0;A<this.length;A++){var d=this[A][0];null!=d&&(o[d]=!0)}for(var c=0;c<n.length;c++){var s=[].concat(n[c]);r&&o[s[0]]||(void 0!==i&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=i),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),a&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=a):s[4]="".concat(a)),e.push(s))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(a," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var i={},o=[],A=0;A<n.length;A++){var d=n[A],c=r.base?d[0]+r.base:d[0],s=i[c]||0,p="".concat(c," ").concat(s);i[c]=s+1;var l=t(p),u={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==l)e[l].references++,e[l].updater(u);else{var h=a(u,r);r.byIndex=A,e.splice(A,0,{identifier:p,updater:h,references:1})}o.push(p)}return o}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var i=r(n=n||[],a=a||{});return function(n){n=n||[];for(var o=0;o<i.length;o++){var A=t(i[o]);e[A].references--}for(var d=r(n,a),c=0;c<i.length;c++){var s=t(i[c]);0===e[s].references&&(e[s].updater(),e.splice(s,1))}i=d}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},458:(n,e,t)=>{n.exports=t.p+"1e2bad270fd2b572a044.jpg"}},e={};function t(r){var a=e[r];if(void 0!==a)return a.exports;var i=e[r]={id:r,exports:{}};return n[r](i,i.exports,t),i.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),a=t.n(r),i=t(569),o=t.n(i),A=t(565),d=t.n(A),c=t(216),s=t.n(c),p=t(589),l=t.n(p),u=t(426),h={};h.styleTagTransform=l(),h.setAttributes=d(),h.insert=o().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=s(),e()(u.Z,h),u.Z&&u.Z.locals&&u.Z.locals;const m=t.p+"5f9a998b93b838e24e7b.png",E=t.p+"fe63b9b8b1892856419e.png",C=t.p+"8d70793284db628fb63d.png",f=t.p+"a55c2563e4d86a0f3a8d.png",g=t.p+"9820174e90bd6300237d.png",x=t.p+"eee45ea24ed622892f8b.png",y=t.p+"b111f0680a792f12a2fa.png",B=t.p+"90344d61cf00ad6c6f71.png",w=t.p+"3ba02247e7366f77cc82.png";let b;const v=(()=>{class n{constructor(n){this.location=[n.location.name,n.location.region,n.location.country],this.weather=n.current.condition.text,this.icon=n.current.condition.icon,this.tempF=n.current.temp_f,this.tempC=n.current.temp_c,this.time=n.location.localtime,this.feelsLikeF=n.current.feelslike_f,this.feelsLikeC=n.current.feelslike_c,this.rainChance=n.forecast.forecastday[0].day.daily_chance_of_rain,this.sunRise=n.forecast.forecastday[0].astro.sunrise,this.sunSet=n.forecast.forecastday[0].astro.sunset,this.moonPhase=n.forecast.forecastday[0].astro.moon_phase,this.humid=n.current.humidity,this.wind=[n.current.wind_mph,n.current.wind_kph,n.current.wind_dir],this.dailyForecast=[];for(let e=1;e<n.forecast.forecastday.length;e++)this.dailyForecast.push({sunRise:n.forecast.forecastday[e].astro.sunrise,sunSet:n.forecast.forecastday[e].astro.sunset,moonPhase:n.forecast.forecastday[e].astro.moon_phase,tempC:n.forecast.forecastday[e].day.avgtemp_c,tempF:n.forecast.forecastday[e].day.avgtemp_f,date:n.forecast.forecastday[e].date,weatherType:n.forecast.forecastday[e].day.condition.icon});let e=parseInt(n.location.localtime.substr(11,2)),t=0;this.hourlyForecast=[];for(let r=0;r<24;r++)e>=24&&(e=0,t++),this.hourlyForecast.push({time:n.forecast.forecastday[t].hour[e].time,tempC:n.forecast.forecastday[t].hour[e].temp_c,tempF:n.forecast.forecastday[t].hour[e].temp_f,weatherType:n.forecast.forecastday[t].hour[e].condition.icon}),e++}}let e;return{retrieveWeather:async()=>{try{e=e?search.value:"New York";const t=await fetch(`https://api.weatherapi.com/v1/forecast.json?key=e3b792acc4dc4d7593b232955232802&q=${e}&days=8&aqi=no&alerts=no\n      `,{mode:"cors"}),r=await t.json();console.log(r),(e=>{b=new n(e),console.log(b)})(r)}catch(n){alert("Invalid location entered!")}}}})();function I(n,e){if(e.length<n)throw new TypeError(n+" argument"+(n>1?"s":"")+" required, but only "+e.length+" present")}function k(n){return k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},k(n)}function N(n){I(1,arguments);var e=Object.prototype.toString.call(n);return n instanceof Date||"object"===k(n)&&"[object Date]"===e?new Date(n.getTime()):"number"==typeof n||"[object Number]"===e?new Date(n):("string"!=typeof n&&"[object String]"!==e||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments"),console.warn((new Error).stack)),new Date(NaN))}function T(n){return I(1,arguments),N(n).getDay()}Math.pow(10,8);var Y=6e4,S=36e5;function W(n,e){var t;I(1,arguments);var r=function(n){if(null===n||!0===n||!1===n)return NaN;var e=Number(n);return isNaN(e)?e:e<0?Math.ceil(e):Math.floor(e)}(null!==(t=null==e?void 0:e.additionalDigits)&&void 0!==t?t:2);if(2!==r&&1!==r&&0!==r)throw new RangeError("additionalDigits must be 0, 1 or 2");if("string"!=typeof n&&"[object String]"!==Object.prototype.toString.call(n))return new Date(NaN);var a,i=function(n){var e,t={},r=n.split(F.dateTimeDelimiter);if(r.length>2)return t;if(/:/.test(r[0])?e=r[0]:(t.date=r[0],e=r[1],F.timeZoneDelimiter.test(t.date)&&(t.date=n.split(F.timeZoneDelimiter)[0],e=n.substr(t.date.length,n.length))),e){var a=F.timezone.exec(e);a?(t.time=e.replace(a[1],""),t.timezone=a[1]):t.time=e}return t}(n);if(i.date){var o=function(n,e){var t=new RegExp("^(?:(\\d{4}|[+-]\\d{"+(4+e)+"})|(\\d{2}|[+-]\\d{"+(2+e)+"})$)"),r=n.match(t);if(!r)return{year:NaN,restDateString:""};var a=r[1]?parseInt(r[1]):null,i=r[2]?parseInt(r[2]):null;return{year:null===i?a:100*i,restDateString:n.slice((r[1]||r[2]).length)}}(i.date,r);a=function(n,e){if(null===e)return new Date(NaN);var t=n.match(j);if(!t)return new Date(NaN);var r=!!t[4],a=D(t[1]),i=D(t[2])-1,o=D(t[3]),A=D(t[4]),d=D(t[5])-1;if(r)return function(n,e,t){return e>=1&&e<=53&&t>=0&&t<=6}(0,A,d)?function(n,e,t){var r=new Date(0);r.setUTCFullYear(n,0,4);var a=7*(e-1)+t+1-(r.getUTCDay()||7);return r.setUTCDate(r.getUTCDate()+a),r}(e,A,d):new Date(NaN);var c=new Date(0);return function(n,e,t){return e>=0&&e<=11&&t>=1&&t<=(Z[e]||(L(n)?29:28))}(e,i,o)&&function(n,e){return e>=1&&e<=(L(n)?366:365)}(e,a)?(c.setUTCFullYear(e,i,Math.max(a,o)),c):new Date(NaN)}(o.restDateString,o.year)}if(!a||isNaN(a.getTime()))return new Date(NaN);var A,d=a.getTime(),c=0;if(i.time&&(c=function(n){var e=n.match($);if(!e)return NaN;var t=U(e[1]),r=U(e[2]),a=U(e[3]);return function(n,e,t){return 24===n?0===e&&0===t:t>=0&&t<60&&e>=0&&e<60&&n>=0&&n<25}(t,r,a)?t*S+r*Y+1e3*a:NaN}(i.time),isNaN(c)))return new Date(NaN);if(!i.timezone){var s=new Date(d+c),p=new Date(0);return p.setFullYear(s.getUTCFullYear(),s.getUTCMonth(),s.getUTCDate()),p.setHours(s.getUTCHours(),s.getUTCMinutes(),s.getUTCSeconds(),s.getUTCMilliseconds()),p}return A=function(n){if("Z"===n)return 0;var e=n.match(z);if(!e)return 0;var t="+"===e[1]?-1:1,r=parseInt(e[2]),a=e[3]&&parseInt(e[3])||0;return function(n,e){return e>=0&&e<=59}(0,a)?t*(r*S+a*Y):NaN}(i.timezone),isNaN(A)?new Date(NaN):new Date(d+c+A)}var F={dateTimeDelimiter:/[T ]/,timeZoneDelimiter:/[Z ]/i,timezone:/([Z+-].*)$/},j=/^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/,$=/^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/,z=/^([+-])(\d{2})(?::?(\d{2}))?$/;function D(n){return n?parseInt(n):1}function U(n){return n&&parseFloat(n.replace(",","."))||0}var Z=[31,null,31,30,31,30,31,31,30,31,30,31];function L(n){return n%400==0||n%4==0&&n%100!=0}let M="daily",_="F",R=0;window.onload=()=>{document.getElementById("town-search").addEventListener("submit",(()=>{q.pageUpdates("new")})),q.pageUpdates("new"),document.getElementById("temp-conversion").addEventListener("click",(()=>{q.convertTemp()})),document.getElementById("hourly-time").addEventListener("click",(()=>{q.displayTime()})),document.getElementById("days-time").addEventListener("click",(()=>{q.displayTime()})),document.getElementById("days-time").disabled=!0,document.getElementById("next-button").src=w,document.getElementById("next-button").addEventListener("click",(()=>{P.nextSlide()})),document.getElementById("prev-button").src=B,document.getElementById("prev-button").addEventListener("click",(()=>{P.prevSlide()}));let n=document.querySelectorAll(".dots");for(let e=0;e<n.length;e++)n[e].addEventListener("click",(()=>{P.slideJump(e)}));n[0].classList.add("dot-active")};const q=(()=>{const n=n=>{for(;n.firstChild;)n.removeChild(n.lastChild)},e=()=>{let e=document.getElementById("time-cards");if(n(e),"daily"===M)for(let n=0;n<b.dailyForecast.length;n++){let t=document.createElement("div"),a=document.createElement("p"),i=document.createElement("h1"),o=document.createElement("img");t.appendChild(a),t.appendChild(i),t.appendChild(o),t.setAttribute("class","day-card");let A=r(T(W(b.dailyForecast[n].date)));a.appendChild(document.createTextNode(A)),"F"===_?i.appendChild(document.createTextNode(`${b.dailyForecast[n].tempF} °F`)):i.appendChild(document.createTextNode(`${b.dailyForecast[n].tempC} °C`)),o.src=b.dailyForecast[n].weatherType,e.appendChild(t)}else for(let n=0;n<8;n++)e.appendChild(t(n+8*R))},t=n=>{let e=document.createElement("div"),t=document.createElement("p"),r=document.createElement("h1"),i=document.createElement("img");e.appendChild(t),e.appendChild(r),e.appendChild(i),e.setAttribute("class","hour-card"),e.classList.add(`${n}`);let o=a(function(n){return I(1,arguments),N(n).getHours()}(W(b.hourlyForecast[n].time)));return t.appendChild(document.createTextNode(o)),"F"===_?r.appendChild(document.createTextNode(`${b.hourlyForecast[n].tempF} °F`)):r.appendChild(document.createTextNode(`${b.hourlyForecast[n].tempC} °C`)),i.src=b.hourlyForecast[n].weatherType,e},r=n=>{switch(n){case 0:return"Sunday";case 1:return"Monday";case 2:return"Tuesday";case 3:return"Wednesday";case 4:return"Thursday";case 5:return"Friday";case 6:return"Saturday"}},a=n=>0===n?"12 AM":12===n?"12 PM":n>12?n-12+" PM":`${n} AM`;return{pageUpdates:async t=>{"new"===t&&await v.retrieveWeather(),(()=>{let e=document.getElementById("weather"),t=document.getElementById("location"),r=document.getElementById("time"),a=document.getElementById("temp"),i=document.getElementById("weather-icon"),o=document.getElementById("feels-like"),A=document.getElementById("rain-chance"),d=document.getElementById("humidity"),c=document.getElementById("wind-speed"),s=document.getElementById("sun-rise"),p=document.getElementById("sun-set"),l=document.getElementById("moon-phase");n(e),n(t),n(r),n(a),n(o),n(A),n(d),n(c),n(s),n(p),n(l);let u=document.querySelectorAll(".icon");u[0].src=m,u[1].src=E,u[2].src=C,u[3].src=f,u[4].src=g,u[5].src=x,u[6].src=y;for(let n=0;n<b.location.length;n++)t.appendChild(document.createTextNode(`${b.location[n]}`)),t.appendChild(document.createElement("br"));e.appendChild(document.createTextNode(`${b.weather}`)),A.appendChild(document.createTextNode(`${b.rainChance} %`)),s.appendChild(document.createTextNode(`${b.sunRise}`)),p.appendChild(document.createTextNode(`${b.sunSet}`)),l.appendChild(document.createTextNode(`${b.moonPhase}`)),r.appendChild(document.createTextNode(`Retrieved: ${b.time}`)),i.src=b.icon,d.appendChild(document.createTextNode(`${b.humid} %`)),c.appendChild(document.createTextNode(`${b.wind[2]} `)),"F"===_?(a.appendChild(document.createTextNode(`${b.tempF} °F`)),o.appendChild(document.createTextNode(`${b.feelsLikeF} °F`)),c.appendChild(document.createTextNode(`${b.wind[0]} mph`))):(a.appendChild(document.createTextNode(`${b.tempC} °C`)),o.appendChild(document.createTextNode(`${b.feelsLikeC} °C`)),c.appendChild(document.createTextNode(`${b.wind[1]} kph`)))})(),e()},convertTemp:()=>{let n=document.getElementById("temp-conversion"),t=document.getElementById("temp"),r=document.getElementById("feels-like"),a=document.getElementById("wind-speed");"F"===_?(n.textContent="Convert to F",_="C",t.textContent=`${b.tempC} °C`,r.textContent=`${b.feelsLikeC} °C`,a.textContent=`${b.wind[2]} ${b.wind[1]} kph`):(n.textContent="Convert to C",_="F",t.textContent=`${b.tempF} °F`,r.textContent=`${b.feelsLikeF} °F`,a.textContent=`${b.wind[2]} ${b.wind[0]} mph`),e()},displayTime:()=>{let n=document.getElementById("hourly-time"),t=document.getElementById("days-time"),r=document.getElementById("buttons");"daily"===M?(r.classList.remove("inactive"),M="hourly",n.disabled=!0,t.disabled=!1):(r.classList.add("inactive"),M="daily",n.disabled=!1,t.disabled=!0),e()},generateForecastCards:e}})(),P=(()=>{const n=n=>{let e=document.querySelectorAll(".dots");e.forEach((n=>n.setAttribute("class","dots"))),e[n].classList.add("dot-active")};return{nextSlide:()=>2===R?void 0:(R++,q.generateForecastCards(),void n(R)),prevSlide:()=>0===R?void 0:(R--,q.generateForecastCards(),void n(R)),slideJump:e=>{R=e,q.generateForecastCards(),n(e)}}})()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,